version: '2'
networks:
  sensu_front:
    driver: bridge
  sensu_data:
    driver: bridge
  sensu_trans:
    driver: bridge

services:
  crate1:
    image: crate:latest
    command: 'crate -Des.node.name=crate1 -Des.cluster.name=DEV -Des.discovery.zen.minimum_master_nodes=2 -Des.gateway.recover_after_nodes=2 -Des.gateway.recover_after_time=5m -Des.gateway.expected_nodes=3 -Des.http.compression=true'
    container_name: crate1
    hostname: crate1
    restart: always
    networks:
      - sensu_data
    ports:
      - "4200:4200"
      - "4300:4300"
  crate2:
    image: crate:latest
    command: 'crate -Des.node.name=crate2 -Des.cluster.name=DEV -Des.discovery.zen.minimum_master_nodes=2 -Des.gateway.recover_after_nodes=2 -Des.gateway.recover_after_time=5m -Des.gateway.expected_nodes=3 -Des.http.compression=true'
    container_name: crate2
    hostname: crate2
    restart: always
    networks:
      - sensu_data
    links:
      - crate1
  crate3:
    image: crate:latest
    command: 'crate -Des.node.name=crate3 -Des.cluster.name=DEV -Des.discovery.zen.minimum_master_nodes=2 -Des.gateway.recover_after_nodes=2 -Des.gateway.recover_after_time=5m -Des.gateway.expected_nodes=3 -Des.http.compression=true'
    container_name: crate3
    hostname: crate3
    restart: always
    networks:
      - sensu_data
    links:
      - crate2
  influxdb:
    image: influxdb
    container_name: influxdb
    hostname: influxdb
    restart: always
    networks:
      - sensu_data
    ports:
      - "8083:8083"
      - "8086:8086"
  redis:
    build: redis
    image: redis
    container_name: redis
    hostname: redis
    restart: always
    networks:
      - sensu_data
    ports:
      - "6379:6379"
  rmq1:
    build: rmq
    image: rmq
    container_name: rmq1
    hostname: rmq1
    restart: always
    networks:
      - sensu_trans
    environment:
      - ERLANG_COOKIE=5673f5aeb1d3a2db81de74a78f44ba14
    ports:
      - "5671:5671"
      - "5672:5672"
      - "15672:15672"
  rmq2:
    build: rmq
    image: rmq
    container_name: rmq2
    hostname: rmq2
    restart: always
    networks:
      - sensu_trans
    links:
      - rmq1
    ports:
      - "15673:15672"
    environment:
      - ERLANG_COOKIE=5673f5aeb1d3a2db81de74a78f44ba14
  rmq3:
    build: rmq
    image: rmq
    container_name: rmq3
    hostname: rmq3
    restart: always
    networks:
      - sensu_trans
    links:
      - rmq1
      - rmq2
    ports:
      - "15674:15672"
    environment:
      - ERLANG_COOKIE=5673f5aeb1d3a2db81de74a78f44ba14
  sensu-server1:
    build: sensu-server
    image: sensu-server
    container_name: sensu-server1
    hostname: sensu-server1
    restart: always
    networks:
      - sensu_data
      - sensu_trans
    links:
      - rmq1
      - rmq2
      - rmq3
      - redis
      - crate1
      - crate2
      - crate3
      - influxdb
    environment:
      - RABBITMQ_HOST=rmq1,rmq2,rmq3
      - CLIENT_SUBSCRIPTIONS=metrics_os
      - REDIS_HOST=redis
      - REDIS_PORT=6379
    entrypoint: dockerize -timeout 120s -wait tcp://redis:6379 -wait tcp://rmq1:5671 -wait tcp://rmq2:5671 -wait tcp://rmq3:5671 /run.sh
  sensu-server2:
    build: sensu-server
    image: sensu-server
    container_name: sensu-server2
    hostname: sensu-server2
    restart: always
    networks:
      - sensu_data
      - sensu_trans
    links:
      - rmq1
      - rmq2
      - rmq3
      - redis
      - crate1
      - crate2
      - crate3
      - influxdb
    environment:
      - RABBITMQ_HOST=rmq1,rmq2,rmq3
      - CLIENT_SUBSCRIPTIONS=metrics_os
      - REDIS_HOST=redis
      - REDIS_PORT=6379
    entrypoint: dockerize -timeout 120s -wait tcp://redis:6379 -wait tcp://rmq1:5671 -wait tcp://rmq2:5671 -wait tcp://rmq3:5671 /run.sh
  sensu-api:
    build: sensu-api
    image: sensu-api
    container_name: sensu-api
    hostname: sensu-api
    restart: on-failure:3
    networks:
      - sensu_front
      - sensu_data
      - sensu_trans
    depends_on:
      - sensu-server1
    links:
      - rmq1
      - rmq2
      - rmq3
      - redis
    environment:
      - RABBITMQ_HOST=rmq1,rmq2,rmq3
      - REDIS_HOST=redis
      - REDIS_PORT=6379
    entrypoint: dockerize -timeout 120s -wait tcp://redis:6379 -wait tcp://rmq1:5671 -wait tcp://rmq2:5671 -wait tcp://rmq3:5671 /run.sh
    ports:
      - "3000:3000"
      - "4567:4567"
  sensu-client1:
    build: sensu-client
    image: sensu-client
    container_name: sensu-client1
    hostname: sensu-client1
    restart: "no"
    networks:
      - sensu_trans
    links:
      - rmq1
      - rmq2
      - rmq3
    environment:
      - RABBITMQ_HOST=rmq1,rmq2,rmq3
      - CLIENT_SUBSCRIPTIONS=metrics_os
    ports:
      - "3030:3030"
    entrypoint: dockerize -timeout 120s -wait tcp://rmq1:5671 -wait tcp://rmq2:5671 -wait tcp://rmq3:5671 /run.sh

